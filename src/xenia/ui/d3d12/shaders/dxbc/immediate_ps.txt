//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   bool xe_restrict_texture_samples;  // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      ID      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- ------- -------------- ------
// xe_immediate_sampler              sampler      NA          NA      S0             s0      1 
// xe_immediate_texture              texture  float4          2d      T0             t0      1 
// $Globals                          cbuffer      NA          NA     CB0            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_1
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[0:0][1], immediateIndexed, space=0
dcl_sampler S0[0:0], mode_default, space=0
dcl_resource_texture2d (float,float,float,float) T0[0:0], space=0
dcl_input_ps linear v0.xy
dcl_input_ps linear v1.xyzw
dcl_output o0.xyzw
dcl_temps 1
ieq r0.x, CB0[0][0].x, l(0)
ge r0.y, l(1.000000), v0.x
or r0.x, r0.y, r0.x
if_nz r0.x
  sample r0.xyzw, v0.xyxx, T0[0].xyzw, S0[0]
  mul o0.xyzw, r0.xyzw, v1.xyzw
else 
  mov o0.xyzw, v1.xyzw
endif 
ret 
// Approximately 10 instruction slots used
